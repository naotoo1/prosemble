name: examples
on:
  push:
    paths:
      - "examples/**/*.py"
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    container:
      image: notoo1/ubuntu-nix:24.04-8
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Restore Nix environment cache
        uses: actions/cache@v4
        id: nix-cache
        with:
          path: |
            /nix
            ~/.nix-profile
            ~/.devenv
            .direnv
            .env_cache
          key: nix-${{ runner.os }}-${{ hashFiles('devenv.nix', 'devenv.lock', 'devenv.yaml', 'flake.nix', 'flake.lock') }}
          restore-keys: |
            nix-${{ runner.os }}-

      - name: Ensure Nix is Installed and Working
        run: |
          if ! command -v nix &> /dev/null; then
            echo "ERROR: Nix should be preinstalled but is missing!"
            exit 1
          fi
          echo "Nix Version:"
          nix --version
          
          # Ensure Nix environment is properly sourced
          . /etc/profile || { echo "Failed to load Nix environment"; exit 1; }

      - name: Install devenv (Safe Method)
        run: |
          if ! command -v devenv &> /dev/null; then
            echo "Installing devenv using nix-env..."
            nix-env -iA nixpkgs.devenv || { echo "devenv installation failed!"; exit 1; }
          else
            echo "devenv is already installed"
          fi

      - name: Setup devenv Environment
        run: |
          if [ -f .env_cache ] && [ -s .env_cache ] && [ "${{ steps.nix-cache.outputs.cache-hit }}" == "true" ]; then
            echo "Using cached environment"
            source .env_cache
          else
            echo "Setting up environment from scratch"
            devenv init || { echo "Failed to initialize devenv"; exit 1; }
            direnv allow . && eval "$(direnv export bash)"
            python --version || { echo "Python setup failed"; exit 1; }
            echo "PYTHONPATH=${PYTHONPATH}" >> .env_cache
            echo "PROJECT_DIR=${PROJECT_DIR}" >> .env_cache
            env >> .env_cache
          fi

      - name: Install Dependencies
        run: |
          uv pip install --no-cache-dir Cython
          uv pip install -e .[all]

      - name: Run Tests
        run: |
          ./tests/test_examples.sh examples/
