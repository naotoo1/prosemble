name: examples
on:
  push:
    paths:
      - "examples/**.py"
  workflow_dispatch:  # Allows manual trigger

jobs:
  linux:
    runs-on: ubuntu-latest
    container:
      image: notoo1/ubuntu-nix:24.04-8  # Public container

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set executable permissions
        run: chmod +x tests/test_examples.sh

      - name: Restore Nix environment
        uses: actions/cache@v4
        id: nix-cache
        with:
          path: |
            ~/.nix-profile
            /nix/store
            .direnv
            .env_cache
          key: ${{ runner.os }}-devenv-python312-${{ hashFiles('devenv.nix', 'devenv.lock') }}
          restore-keys: |
            ${{ runner.os }}-devenv-python312-

      - name: Setup devenv Environment
        run: |
          if ! command -v devenv &> /dev/null; then
            echo "Installing devenv..."
            nix profile install --accept-flake-config "nixpkgs#devenv"
          fi

          if [ -f .env_cache ] && [ "${{ steps.nix-cache.outputs.cache-hit }}" == "true" ]; then
            echo "Using cached environment"
            source .env_cache
          else
            echo "Setting up environment from scratch using devenv"
            devenv init
            devenv shell --no-status --impure bash -c "
              echo \"PYTHONPATH=\${PYTHONPATH}\" >> .env_cache
              echo \"PROJECT_DIR=\${PROJECT_DIR}\" >> .env_cache
              env >> .env_cache
            "
          fi

          source .env_cache

      - name: Install dependencies
        run: |
          devenv shell --no-status --impure bash -c "
            python --version
            uv pip install --no-cache-dir Cython
            uv pip install -e .[all]
          "

      - name: Run Tests
        run: |
          devenv shell --no-status --impure bash -c "./tests/test_examples.sh examples/"
